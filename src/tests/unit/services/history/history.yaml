name: ApplicationName
description: Short explanation / purpose etc.
#
#
service MultiQueue:
    in queue in-queue:
        max-length: 10000
    out queue:
        # - TaskTestReceiver.queue
#
#
service Task HistoryTask:
    cycle: 3 s
    subscribe: 
        MultiQueue:                     # - multicast subscription to the MultiQueue
            {history: rw}: []            #   - on all points having Cot::Inf and history::read

    fn ToApiQueue:
        queue: MultiQueue.in-queue
        input fn SqlMetric:
            initial: 0.123      # начальное значение
            table: 'public."event"'
            sql: "insert into {table} (pid,value,status,timestamp) values ({pid},{input1.value},{input1.status},{input1.status},{input1.timestamp});"
            input fn HistoryPoints:
                input2: point any

    # fn ToMultiQueue:
    #     in1 point CraneMovement.BoomUp: 
    #         type: 'Int'
    #         comment: 'Some indication'
    #         input fn add:
    #             input1 fn add:
    #                 input1: const real 0.2
    #                 input2: point real '/path/Point.Name'
    #     in2 point CraneMovement.BoomDown: 
    #         type: 'real'
    #         history: r
    #         comment: 'Some indication'
    #         input: const real 0.07

    #     in3 point CraneMovement.WinchUp: 
    #         type: 'real'
    #         history: r
    #         comment: 'Some indication'
    #         input: var0
#
#
service ApiClient:
    cycle: 100 ms
    reconnect: 1 s  # default 3 s
    address: 127.0.0.1:8080
    database: crane_data_server
    in queue api-link:
        max-length: 10000
    out queue: MultiQueue.in-queue
    auth_token: 123!@#
    # debug: true
#
#
service TcpServer:
    cycle: 1 ms
    reconnect: 1 s  # default 3 s
    # address: 192.168.120.144:16688
    address: 127.0.0.1:16688
    auth-secret:       # auth: none / auth-secret: pass: ... / auth-ssh: path: ...
        pass: '12345'
    in queue link:
        max-length: 10000
    out queue: MultiQueue.in-queue
#
#
service ProfinetClient Ied01:
    cycle: 1000 ms                         # operating cycle time of the module
    # in queue in-queue:
    #     max-length: 10000
    subscribe: MultiQueue
    out queue: MultiQueue.in-queue
    protocol: 'profinet'
    description: 'S7-IED-01'
    ip: '192.168.130.243'
    rack: 0
    slot: 1
    db db899:                           # multiple DB blocks are allowed, must have unique namewithing parent device
        # description: 'db899 | Exhibit - drive data'
        number: 899
        offset: 0
        size: 34
        point Drive.Speed: 
            type: 'Real'
            address:
                offset: 0
        point Drive.OutputVoltage: 
            type: 'Real'
            address:
                offset: 4
        point Drive.DCVoltage: 
            type: 'Real'
            address:
                offset: 8
        point Drive.Current: 
            type: 'Real'
            address:
                offset: 12
            history: r
        point Drive.Torque: 
            type: 'Real'
            address:
                offset: 16
    db db999:                           # multiple DB blocks are allowed, must have unique namewithing parent device
        description: 'db899 | Exhibit - drive data'
        number: 899
        offset: 0
        size: 34
        point Drive.positionFromMru: 
            type: 'Real'
            address:
                offset: 20
        point Drive.positionFromHoist: 
            type: 'Real'
            address:
                offset: 24
        point Capacitor.Capacity: 
            type: 'Int'
            address:
                offset: 28
        point Capacitor.ChargeIn.On: 
            type: 'Bool'
            address:
                offset: 30
                bit: 0
        point Capacitor.ChargeOut.On: 
            type: 'Bool'
            address:
                offset: 32
                bit: 0
