# let VarName1:
#     input:
#         fn functionName:
#             input: point '/path/Point.Name/'

# service MultiQueue:
#     in queue in-queue:
#         max-length: 10000
#     out queue:
#         - task1.recv-queue
#         - CmaClient.in-queue
#         - CmaServer.in-queue

# service CmaClient:
#     in queue in-queue:
#         max-length: 10000
#     out queue: MultiQueue.in-queue

# service CmaServer:
#     in queue in-queue:
#         max-length: 10000
#     out queue: MultiQueue.in-queue


# link api-link
#     max-length: 10000

# queue recv-queue:
#     max-length: 10000

task task1:
    cycle: 1 ms
    in queue recv-queue:
        max-length: 10000
    let Var1:
        input fn add:
            input1: point float '/path/Point.Name1'
            input2 fn add: 
                input1: point float '/path/Point.Name1'
                input2: const float 0.04
    let Var2:
        input fn add:
            input1: point float '/path/Point.Name2'
            input2 fn add: 
                input1: point float '/path/Point.Name2'
                input2: const float 0.07

    fn toApiQueue:
        queue: api-queue
        input metric SqlMetric:
            initial: 0.123      # начальное значение
            table: table_name
            # sql: "UPDATE {table} SET kind = '{input1.value}' WHERE id = '{input2.value}';"
            sql: "insert into {table} (id, value, timestamp) values ({id}, {input.value}, {input3.timestamp});"
            input let Var3:
                    input fn add:
                        input1 fn add:
                            input1: const float 0.2
                            input2: point float '/path/Point.Name'
                        input2:
                            const float 0.05
            input3:
                const int 333

# service ApiClient:
#     queue api-queue:
#         max-length: 10000

# service ExternalDevice:
#     protocol: profinet
